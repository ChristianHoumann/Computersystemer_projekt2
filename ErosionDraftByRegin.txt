LI R0 0             // Nul-variabel at sammenligne med
LI Rmaxloop 3       // Til for-loop grænse
LI Rmax 4           // Til at bruge i output og lave edges sorte
LI Rx 0             // Starting værdi af x
LI Ry 0             // Starting værdi af y
JEQ 68 Ry Rmax      // Ry er nået max så vi inkrementerer Rx

MULT Rmemoryin Rmax Ry  // Finder værdien i plads (Rx,Ry) i memory
ADD Rmemoryin Rmemoryin Rx
LD Rin Rmemoryin      // Rin er værdien. Rmemory er addressen i memory

JGT 22 Rx R0         // Hvis Rx/Ry ikke er på randen jumper vi videre
JLT 22 Rx Rmaxloop   // -||-
JGT 22 Ry R0         // -||-
JLT 22 Ry Rmaxloop   // -||-
LI Rout 0            // Hvis vi er i randen laver vi den sort
ADD Rmemoryout Rmemoryin 16
SD Rout Rmemoryout
ADDI Ry Ry 1
JR 6                 // Ry er inkrementeret og vi jumper

JGT 30 Rin R0        // Hvis pixel ikke er sort jumper vi til erodering processen
LI Rout 0
ADDI Rmemoryout Rmemoryin 16
SD Rout Rmemoryout
ADDI Ry Ry 1
JR 6

// Erodering processen (Når pixel er hvid)
SUBI Rxtemp Rx 1
MULT Rmemoryintemp Rmax Ry
ADD Rmemoryintemp Rmemoryintemp Rxtemp
LD Rintemp Rmemoryintemp 
JEQ 56 Rintemp R0    // Jumper til erodering hvis (Rx-1,Ry) er 0

ADDI Rxtemp Rx 1
MULT Rmemoryintemp Rmax Ry
ADD Rmemoryintemp Rmemoryintemp Rxtemp
LD Rintemp Rmemoryintemp 
JEQ 56 Rintemp R0    // Jumper til erodering hvis (Rx+1,Ry) er 0

SUBI Rytemp Ry 1
MULT Rmemoryintemp Rmax Rytemp
ADD Rmemoryintemp Rmemoryintemp Rx
LD Rintemp Rmemoryintemp 
JEQ 56 Rintemp R0    // Jumper til erodering hvis (Rx,Ry-1) er 0

ADDI Rytemp Ry 1
MULT Rmemoryintemp Rmax Rytemp
ADD Rmemoryintemp Rmemoryintemp Rx
LD Rintemp Rmemoryintemp 
JEQ 56 Rintemp R0    // Jumper til erodering hvis (Rx,Ry+1) er 0

JR 62

LI Rout 0
ADDI Rmemoryout Rmemoryin 16
SD Rout Rmemoryout
ADDI Ry Ry 1
JR 6

LI Rout 255
ADDI Rmemoryout Rmemoryin 16
SD Rout Rmemoryout
ADDI Ry Ry 1        // y for-loopet er kørt helt igennem
JR 6                // Inkrementerer Ry og jumper 

ADDI Rx Rx 1        // Inkrementerer x
JEQ 72 Rx Rmax       // programmet er færdig-kørt. Jumper til END
JR 5                // Jumper til der vi nulstiller Ry

END


4x4

0 0 0 0
0 1 1 0
0 1 1 1
1 1 1 1